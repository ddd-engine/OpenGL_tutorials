#version 330 core

//inputs
in vec2 fragment_uv;
in vec3 light_direction_tangentspace;

//uniforms
uniform sampler2D textureSampler;
uniform sampler2D normalSampler;

//outputs
out vec4 color;

void main()
{
	// Local normal, in tangent space
	vec3 normal_tangentspace = normalize(texture2D( normalSampler, vec2(fragment_uv.x, -fragment_uv.y) ).rgb*2.0 - 1.0);
	float light_contrib = clamp( dot( light_direction_tangentspace,normal_tangentspace ), 0,1 );
	color.rgb = 2.0 * vec3(1.0,1.0,1.0) * light_contrib * texture(textureSampler, vec2(fragment_uv.x, -fragment_uv.y)).rgb;
	color.rgb = light_direction_tangentspace;
	color.a = 1.0;
}